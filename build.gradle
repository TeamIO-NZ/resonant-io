plugins {
	id 'fabric-loom' version '0.2.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
	jcenter()
	maven { url "https://www.curseforge.com/api/maven" }
	maven { url "http://server.bbkr.space:8081/artifactory/libs-snapshot" }
	maven { url "https://maven.modmuss50.me" }
	maven { url "https://mod-buildcraft.com/maven" }
	maven { url 'https://jitpack.io' }
	maven {url "http://tehnut.info/maven"}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation("me.shedaniel:RoughlyEnoughItems:${project.rei_version}")
	modImplementation("io.github.prospector:modmenu:${project.modmenu_version}")
	modImplementation("me.shedaniel.cloth:config-2:${project.cloth_config_version}") { transitive = false }

	// include these libraries inside our jar so the mod will always have a version to fallback on.
	include("me.shedaniel.cloth:config-2:${project.cloth_config_version}")
	include("com.github.StellarHorizons:Cobalt:master-SNAPSHOT")

	modApi "blue.endless:jankson:1.2.0"

	modImplementation("mcp.mobius.waila:Hwyla:1.15.2-1.9.21-72")
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		// mavenLocal()
	}
}
